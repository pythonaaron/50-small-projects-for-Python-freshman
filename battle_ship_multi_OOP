import random
from math import sqrt
from time import sleep
N = int(input("Please Enter the scale of the ocean:"))
R = int(input("Please Enter the bomb explosive damage radius:"))
L = int(input("Please Enter the maximum horizontal and vertical distance between the two aircrft carrier:"))
print("The Game will start at an ocean of %d * %d size, the atomic bomb explosive damage radius is %d.\nThe maximum horizontal and vertical distance between two aircraft carrier is no more than %d." % (N, N, R, L))
class Aircraft_carrier(object):
    life = 3
    def __init__(self, name):
        self.name = name
    def carrier_hide(self, target_row, target_col, carrier_location, board):
        if sqrt((carrier_location[0] - target_row) ** 2 + (carrier_location[1] - target_col) ** 2) <= R:
            board[carrier_location[0]][carrier_location[1]] = "*"
        else:
            board[carrier_location[0]][carrier_location[1]] = "."
        return board
    def carrier_damage(self, target_row, target_col, carrier_location):
        if self.life > 0:
            if sqrt((carrier_location[0] - target_row) ** 2 + (carrier_location[1] - target_col) ** 2) <= R:
                if self.life == 3:
                    self.life -= 1
                    print("Wonderful! The %s Aircraft Carrier is damaged, enemies are frightened." % self.name)
                elif self.life == 2:
                    self.life -= 1
                    print("Excellent! The %s Aircraft Carrier is broken, enemies are crying!" % self.name)
                elif self.life == 1:
                    self.life -= 1
                    print("Fantastic! The %s Aircraft Carrier is eliminated." % self.name)
            else:
                print("Oops! You missed The %s Aircraft Carrier." % self.name)
tokyo = Aircraft_carrier("Tokyo")
abe = Aircraft_carrier("Abe Shinzo")    
def aircraft_carrier_location():
    x = random.randint(L, N-L-1)
    y = random.randint(L, N-L-1)
    var1 = random.choice([i for i in range(-L, L+1) if i != 0])
    var2 = random.choice([i for i in range(-L, L+1) if i != 0])
    tokyo_location = [x, y]
    abe_shizo_location = [x + var1, y + var2]
    aircraft_carrier_location = [tokyo_location, abe_shizo_location]
    return aircraft_carrier_location
def print_board(board):
    for row in board:
        print(" ".join(row))
def battle_field_status(target_row, target_col, aircraft_carrier_location):
    board = []
    for x in range(N+1):
        board.append(["."] * N)
    for i in range(N):
        for j in range(N):
            if sqrt((target_row-i)**2 + (target_col-j)**2) <= R:
                board[i][j] = "*"
    board[target_row][target_col] = "+"
    board[aircraft_carrier_location[0][0]][aircraft_carrier_location[0][1]] = "T"
    board[aircraft_carrier_location[1][0]][aircraft_carrier_location[1][1]] = "A"          
    return board
def play():
    for turn in range(8):
        print("*" * 100)
        print("turn: %d\n" % (turn+1))
        target_row = int(input(print("General, please enter the row position for firing the atom bomb:"))) - 1
        target_col = int(input(print("Now please enter the collum position for firing:"))) - 1
        if target_row < 0 or target_row > N-1 or target_col < 0 or target_col > N-1:
            print("Oops! That is not even in the ocean!")
            continue
        carrier_location = aircraft_carrier_location()
        board = battle_field_status(target_row, target_col, carrier_location)
        if tokyo.life > 0:
            tokyo.carrier_damage(target_row, target_col, carrier_location[0])
        else:
            board = tokyo.carrier_hide(target_row, target_col, carrier_location[0], board)
        if abe.life > 0:
            abe.carrier_damage(target_row, target_col, carrier_location[1])
        else:
            board = abe.carrier_hide(target_row, target_col, carrier_location[1], board)
        print_board(board)
        print("Notes: \n'+' stands for atomic bomb explosion position\n'*' stands for bomb damage scope\n'T' stands for Tokyo Aircraft carrier.\n'A' stands for Abe Shinzo Aircraft Carrier.\n")
        if tokyo.life == 0 and abe.life == 0:
            print("Congratulations you great General, all enemies are eliminated. Mission accomplished. President Xi will meet you at ZhongNanHai.")
            print("Program Exit...")
            break
        if turn == 7:
            print("Mission failed! Some enemies are still alive.")
            print("Game Over. Program exit...")
play()
